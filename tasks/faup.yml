---

- name: git clone faup
  git:
    repo=https://github.com/stricaud/faup.git
    dest={{ toolsetdir }}/faup

- name: faup dependencies
  package: name={{item}} state=present
  with_items:
    - cmake
    - make

- name: faup | compile
  command: "{{ item }} chdir={{ toolsetdir }}/faup/build creates={{ toolsetdir }}/faup/build/src/tools/faup"
  with_items:
    - cmake ..
    - make
- name: Ubuntu | ensure appropriate path for shared libraries
  lineinfile: dest=/etc/ld.so.conf.d/x86_64-linux-gnu.conf line='/usr/local/lib/x86_64-linux-gnu' create=yes
  when: ansible_distribution == 'Ubuntu'
  notify:
    - run ldconfig
- name: RedHat | ensure appropriate path for shared libraries
  lineinfile: dest=/etc/ld.so.conf.d/x86_64-linux-gnu.conf line='/usr/local/lib64' create=yes
  when: ansible_os_family == "RedHat" or ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
  notify:
    - run ldconfig

- name: faup | install
  command: "{{ item }} chdir={{ toolsetdir }}/faup/build creates=/usr/local/bin/faup"
  with_items:
    - make install
  notify:
    - run ldconfig

- block:
    - name: install faup python bindings
      command: "python setup.py install chdir={{ toolsetdir }}/faup/src/lib/bindings/python creates={{ faup_python_bindings }}"
  when: faup_virtualenv_path is not defined or faup_virtualenv_path == ''

- block:
    - name: virtualenv dependencies
      package: name={{ item }} state=present
      with_items:
        - python-virtualenv
        - python-pip
    - name: ensure virtualenv user {{ faup_virtualenv_user }} exists
      user: "name={{ faup_virtualenv_user }} home={{ faup_virtualenv_home }} state=present"
    - name: install faup python bindings - virtualenv
      pip: "name=file://{{ toolsetdir }}/faup/src/lib/bindings/python virtualenv={{ faup_virtualenv_path }}"
## FIXME! end with owner root
      become: yes
      become: "{{ faup_virtualenv_user }}"
## FIXME! not idempotent
    - name: ensure right permissions
      file: "dest={{ faup_virtualenv_path }} state=directory owner={{ faup_virtualenv_user }} recurse=yes"
#      command: "{{ item }} chdir={{ toolsetdir }}/faup/src/lib/bindings/python creates={{ faup_virtualenv_path }}/lib/python2.7/site-packages/pyfaup-1.0-py2.7.egg"
#      with_items:
#        - "{{ faup_virtualenv_path }}/bin/python setup.py build"
#        - "{{ faup_virtualenv_path }}/bin/python setup.py install"
  when: faup_virtualenv_path is defined and faup_virtualenv_path != ''

